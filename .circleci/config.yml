version: 2
jobs:
  build:
    docker:
      - image: phpunit/phpunit
    steps:
      - checkout
      - run: 
          command: |
            mkdir -p ~/phpunit
            phpunit --log-junit ~/phpunit/junit.xml php
          when: always
      - store_test_results:
          path: ~/phpunit
      - store_artifacts:
          path: ~/phpunit
  build:
    docker:
      - image: circleci/node
    steps:
      - checkout
      - run: 
          command: |
            npm install
            ./node_modules/.bin/mocha --reporter spec
          when: always
      - store_artifacts:
          path: ./reports/mocha/test-results.xml
    # docker:
    #   - image: docker:18.03.0-ce-git
    # steps:
    #   - checkout
    #   - setup_remote_docker
    #   - run:
    #       name: Install docker-compose
    #       command: |
    #         apk --update add py2-pip
    #         /usr/bin/pip2 install docker-compose
    #         docker-compose --version
    #   - run:
    #       name: Start Container
    #       command: |
    #         docker-compose up -d server
    #   - run :
    #       name: Running tests...
    #       command: |
    #         set -e
    #         docker-compose up js
    #         docker-compose up php
    #   - run:
    #       name: STOPPING
    #       command: |
    #         docker-compose down
# jobs:
#   js:
#     docker: # use the docker executor type; machine and macos executors are also supported
#       - image: circleci/node:4.8.2 # the primary container, where your job's commands are run
#     steps:
#       - checkout # check out the code in the project directory
#       - run: npm test # run the `echo` command
#   php:
#     docker:
#       - image: circleci/php
#     steps:
#       - checkout
#       - run: wget https://phar.phpunit.de/phpunit-6.5.phar
#       - run: chmod +x phpunit-6.5.phar
#       - run: sudo mv phpunit-6.5.phar /usr/local/bin/phpunit
#       - run: phpunit --version
#       - run: phpunit ./php/StackTest.php

# workflows:
#   version: 2
#   test_all:
#     jobs:
#       - js
#       - php